sudo: true

language: java

jdk: oraclejdk8

# Cache maven artifacts, pip downloads and the node modules for markdownlint
cache:
  directories:
  - ~/.m2
  - ~/.cache/pip
  - docs/guides/node_modules/

# Do not cache the opencast artifacts to detect dependency problems
before_cache:
  - rm -rf ~/.m2/repository/org/opencastproject

# Shorten some commands
# - A simple download command for synfig packages
# - A maven command with logging settings and multithreading.
#
# The number of threads are intentionally set to two times the number of CPU cores since Opencast spends a lot of time
# waiting with no CPU usage.
before_install:
  - shopt -s expand_aliases
  - alias get_synfig='wget -q -O ~/.m2/synfigstudio-1.0.2.deb'
  - alias mvn='mvn --batch-mode -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'

# Default dependency installation
install:
  - sudo apt-get -qq update
  - >
     sudo apt-get install -y
     bzip2
     gzip
     hunspell
     hunspell-de-de
     procps
     sox
     tar
     tesseract-ocr
     tesseract-ocr-deu
     unzip
  - mkdir -p ~/.m2 ~/bin
  - wget -q https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz
  - tar xf ffmpeg-release-64bit-static.tar.xz
  - mv ffmpeg-*/ff* ~/bin/
  - >
     test -f ~/.m2/synfigstudio-1.0.2.deb ||
     get_synfig https://mvncache.opencast.org/nexus/content/repositories/thirdparty/org/synfig/synfigstudio/1.0.2/synfigstudio-1.0.2.deb ||
     get_synfig https://nexus.opencast.org/nexus/content/repositories/thirdparty/org/synfig/synfigstudio/1.0.2/synfigstudio-1.0.2.deb ||
     get_synfig https://netix.dl.sourceforge.net/project/synfig/releases/1.0.2/linux/synfigstudio_1.0.2_amd64.deb
  - sudo dpkg -i ~/.m2/synfigstudio-1.0.2.deb

jobs:
  include:
    # Test documentation in Python environment (Travis docker container)
    # - Ensure no tabs are used
    # - Ensure there are no trailing spaces
    # - Run markdownlint
    - stage: test documentation
      sudo: false
      language: python
      python: "3.6"
      install:
        - pip install mkdocs
        - (cd docs/guides && npm install)
      script:
        - (! grep -rn '	' modules assemblies pom.xml --include=pom.xml)
        - (! grep -rn ' $' modules assemblies pom.xml --include=pom.xml)
        - (! grep -rn '	' etc)
        - (! grep -rn ' $' etc)
        - (cd docs/guides/admin && mkdocs build)
        - (cd docs/guides/developer && mkdocs build)
        - (cd docs/guides/user && mkdocs build)
        - (cd docs/guides && grunt)

    # Make a build excluding the assembly steps
    - stage: build
      env: name=build
      script:
        - mvn clean install -Pnone

    # Make a simple build to generate all Opencast artifacts while excluding as many checks as possible since we do a
    # proper test in parallel anyway. Then run `mvn site` to generate Javadocs.
    - stage: build
      env: name=site
      before_script:
        - mvn install -DskipTests=true -Dcheckstyle.skip=true -Pnone
      script:
        - mvn site -Pnone -Dcheckstyle.skip=true

    # Deploy translation keys to Crowdin if we are on develop or one of the release branches
    - stage: deployment
      env: name=crowdin
      install: skip
      script: skip
      deploy:
        provider: script
        script: bash .upload-crowdin.sh
        on:
          all_branches: true
          condition: $TRAVIS_BRANCH =~ ^develop|r/
